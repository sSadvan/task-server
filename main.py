from fastapi import FastAPI, File, UploadFile
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
from pydantic import BaseModel
import asyncio

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

class Task(BaseModel):
    text: str
    delay: int

@app.post("/task")
async def create_task(task: Task):
    print(f"üì• –ó–∞–¥–∞—á–∞ –ø–æ–ª—É—á–µ–Ω–∞: {task.text} —á–µ—Ä–µ–∑ {task.delay} —Å–µ–∫")
    await asyncio.sleep(task.delay)
    print(f"üì§ –í—Ä–µ–º—è –ø—Ä–∏—à–ª–æ: {task.text}")
    return {"status": "ok", "text": task.text}

@app.post("/audio")
async def upload_audio(file: UploadFile = File(...)):
    print(f"üéôÔ∏è –ü–æ–ª—É—á–µ–Ω –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª: {file.filename}")
    content = await file.read()

    # –ó–∞–≥–ª—É—à–∫–∞ ‚Äî —ç–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    return {
        "text": "–Ω–∞–ø–æ–º–Ω–∏ —É–ª—ã–±–Ω—É—Ç—å—Å—è",
        "delay": 10
    }

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)